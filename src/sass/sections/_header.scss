@use '../all-utils' as *;

.header {
  position: relative;
  padding-top: 20px;
}

.header__desktop__wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;

  padding-block: 10px;
}
.header__logo {
}

.header__mobile__wrapper {
  position: absolute;
  top: 100%;
  right: 0;
  width: 100%;
  height: 100vh;
  border-left: 1px solid $secondary-grey-color;
  background-color: $bg-color;

  transform: translateX(100%);
  transition: transform 1000ms;

  .isOpen & {
    transform: translateX(0);
  }
}

.header__nav {
}

.header__nav__list {
  display: flex;
  flex-direction: column;
  align-items: center;

  //mobile counter version
  counter-reset: num;

  margin-bottom: 30px;
}

.header__nav__item {
}

.header__nav__link {
  display: inline-flex;
  font-family: $rubik-font;
  font-weight: $font-weight-bold;
  // font-size: 0.875rem;
  font-size: 1.25rem;

  //mobile counter version increment
  counter-increment: num;

  padding-inline: 85px;
  padding-block: 20px;

  color: $white-alpha-color;
  text-transform: uppercase;
  text-decoration: none;

  &:active,
  &:focus {
    color: $white-color;
  }

  .header__nav__item:active,
  .header__nav__item:focus & {
    color: $white-color;
  }

  //show mobile counter version
  &:before {
    content: counter(num, decimal-leading-zero);
    margin-right: 10px;
    color: $orange-color;
  }

  @include getMediaScreenSize($breakpoints, tablet) {
    font-size: 1.5rem;

    padding-inline: 160px;
    padding-block: 30px;
  }
}

.header__contacts {
  display: flex;
  justify-content: center;
  align-items: center;
}

.header__contacts__button {
  font-family: $rubik-font;
  font-size: 1.125rem;
  font-weight: $font-weight-bold;

  min-width: 171px;
  min-height: 63px;
  max-width: 300px;

  padding-inline: 35px;
  padding-block: 16px;

  margin-inline: 5px;

  border: 2px solid $white-alpha-color;
  border-radius: 30px;

  color: $white-color;

  text-transform: uppercase;
  white-space: normal;
  word-break: break-word;
}

.header__burger__btn {
  position: relative;
  width: 35px;
  height: 24px;

  &::before,
  &:after,
  & > span {
    position: absolute;
    right: 0;
    width: 100%;
    height: 2px;
    background-color: $white-color;
    transition: all 1000ms;
  }

  &::before {
    content: '';
    top: 0;
  }

  &::after {
    content: '';
    bottom: 0;
  }

  & > span {
    top: 50%;
    transform: translateY(-0.5px);
  }

  .isOpen &::before {
    top: 50%;
    transform: translateY(-50%) rotate(45deg);
  }
  .isOpen &::after {
    top: 50%;
    transform: translateY(-50%) rotate(-45deg);
  }
  .isOpen & > span {
    width: 0%;
  }
}
